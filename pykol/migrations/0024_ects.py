# Generated by Django 2.1 on 2019-03-31 05:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    dependencies = [
        ('pykol', '0023_lien_etablissement'),
    ]

    operations = [
        migrations.CreateModel(
            name='Grille',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.CharField(max_length=50)),
                ('nom', models.CharField(blank=True, max_length=100)),
                ('semestre', models.PositiveSmallIntegerField(choices=[(1, 'semestre 1'), (2, 'semestre 2')])),
            ],
        ),
        migrations.CreateModel(
            name='GrilleGroupeLignes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100, verbose_name='libellé')),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('grille', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupes_lignes', to='pykol.Grille')),
            ],
        ),
        migrations.CreateModel(
            name='GrilleLigne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(blank=True, default='', max_length=100)),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('credits', models.PositiveSmallIntegerField(verbose_name='crédits')),
                ('force_creation', models.BooleanField(help_text="Quand cette option est activée, la ligne est ajoutée systématiquement aux attestations ECTS des étudiants, même si aucun enseignement ne correspond dans la classe ou si l'étudiant ne suit aucune option correspondant à cette matière. Ceci permet de pallier certaines défectuosités (notamment pour la chimie en PCSI dans les nomenclatures SIECLE.", verbose_name='forcer la création')),
                ('grille', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='pykol.Grille')),
                ('groupe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='pykol.GrilleGroupeLignes')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pykol.MEFMatiere', verbose_name='matière')),
            ],
        ),
        migrations.CreateModel(
            name='GrilleMatchLigne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grille', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_options', to='pykol.Grille')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pykol.MEFMatiere', verbose_name='matière')),
            ],
        ),
        migrations.CreateModel(
            name='Jury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periode', models.PositiveSmallIntegerField(choices=[(0, 'année complète'), (1, 'première période'), (2, 'deuxième période')], default=0, verbose_name='période')),
                ('date', models.DateTimeField()),
                ('etat', models.PositiveSmallIntegerField(choices=[(1, 'prévu'), (2, 'terminé')], default=1, verbose_name='état')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pykol.Classe')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mention', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'insuffisant'), (1, 'passable'), (2, 'convenable'), (3, 'assez bien'), (4, 'bien'), (5, 'très bien')], null=True)),
                ('credits', models.PositiveSmallIntegerField(verbose_name='crédits')),
                ('globale', models.BooleanField(default=False, help_text="Champ qui indique si cette mention est la mention globale de l'étudiant pour ce jury.")),
                ('enseignement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pykol.Enseignement')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pykol.Etudiant', verbose_name='étudiant')),
                ('grille_lignes', models.ManyToManyField(to='pykol.GrilleLigne')),
                ('jury', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pykol.Jury')),
            ],
        ),
        migrations.AddField(
            model_name='etablissement',
            name='chef_etablissement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='etablissement_proviseur', to=settings.AUTH_USER_MODEL, verbose_name="chef d'établissement"),
        ),
        migrations.AddField(
            model_name='etablissement',
            name='tampon_etablissement',
            field=models.ImageField(blank=True, null=True, upload_to='', verbose_name="tampon de l'établissement"),
        ),
        migrations.AddField(
            model_name='moduleelementaireformation',
            name='domaines_etude',
            field=models.CharField(blank=True, max_length=400, verbose_name="domaines d'étude"),
        ),
        migrations.AddField(
            model_name='moduleelementaireformation',
            name='libelle_ects',
            field=models.CharField(blank=True, max_length=200, verbose_name='libellé ECTS'),
        ),
        migrations.AddField(
            model_name='user',
            name='signature',
            field=models.ImageField(blank=True, null=True, upload_to=''),
        ),
        migrations.AlterField(
            model_name='academie',
            name='departements',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='départements'),
        ),
        migrations.AlterField(
            model_name='moduleelementaireformation',
            name='libelle',
            field=models.CharField(max_length=100, verbose_name='libellé'),
        ),
        migrations.AddField(
            model_name='grille',
            name='code_mef',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pykol.ModuleElementaireFormation'),
        ),
        migrations.AlterUniqueTogether(
            name='grille',
            unique_together={('code_mef', 'ref', 'semestre')},
        ),
    ]
